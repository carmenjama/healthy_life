package com.healthLife.DAO.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.healthLife.DAO.model.Usuario;
import com.healthLife.DAO.model.Persona;
import com.healthLife.DAO.model.Enfermedad;
import com.healthLife.DAO.model.Administrador;
import com.healthLife.DAO.model.Categoria;
import com.healthLife.DAO.model.Alimento;
import com.healthLife.DAO.model.ListEnfermedad;
import com.healthLife.DAO.model.AlimenRestring;
import com.healthLife.DAO.model.TempAlimento;
import com.healthLife.DAO.model.TempEnfermedad;
import com.healthLife.DAO.model.TempPersona;
import com.healthLife.DAO.model.Familiar;
import com.healthLife.DAO.model.Diario;
import com.healthLife.DAO.model.DiarioLista;
import com.healthLife.DAO.model.TempDiario;
import com.healthLife.DAO.model.Menu;

import com.healthLife.DAO.model.UsuarioDao;
import com.healthLife.DAO.model.PersonaDao;
import com.healthLife.DAO.model.EnfermedadDao;
import com.healthLife.DAO.model.AdministradorDao;
import com.healthLife.DAO.model.CategoriaDao;
import com.healthLife.DAO.model.AlimentoDao;
import com.healthLife.DAO.model.ListEnfermedadDao;
import com.healthLife.DAO.model.AlimenRestringDao;
import com.healthLife.DAO.model.TempAlimentoDao;
import com.healthLife.DAO.model.TempEnfermedadDao;
import com.healthLife.DAO.model.TempPersonaDao;
import com.healthLife.DAO.model.FamiliarDao;
import com.healthLife.DAO.model.DiarioDao;
import com.healthLife.DAO.model.DiarioListaDao;
import com.healthLife.DAO.model.TempDiarioDao;
import com.healthLife.DAO.model.MenuDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig usuarioDaoConfig;
    private final DaoConfig personaDaoConfig;
    private final DaoConfig enfermedadDaoConfig;
    private final DaoConfig administradorDaoConfig;
    private final DaoConfig categoriaDaoConfig;
    private final DaoConfig alimentoDaoConfig;
    private final DaoConfig listEnfermedadDaoConfig;
    private final DaoConfig alimenRestringDaoConfig;
    private final DaoConfig tempAlimentoDaoConfig;
    private final DaoConfig tempEnfermedadDaoConfig;
    private final DaoConfig tempPersonaDaoConfig;
    private final DaoConfig familiarDaoConfig;
    private final DaoConfig diarioDaoConfig;
    private final DaoConfig diarioListaDaoConfig;
    private final DaoConfig tempDiarioDaoConfig;
    private final DaoConfig menuDaoConfig;

    private final UsuarioDao usuarioDao;
    private final PersonaDao personaDao;
    private final EnfermedadDao enfermedadDao;
    private final AdministradorDao administradorDao;
    private final CategoriaDao categoriaDao;
    private final AlimentoDao alimentoDao;
    private final ListEnfermedadDao listEnfermedadDao;
    private final AlimenRestringDao alimenRestringDao;
    private final TempAlimentoDao tempAlimentoDao;
    private final TempEnfermedadDao tempEnfermedadDao;
    private final TempPersonaDao tempPersonaDao;
    private final FamiliarDao familiarDao;
    private final DiarioDao diarioDao;
    private final DiarioListaDao diarioListaDao;
    private final TempDiarioDao tempDiarioDao;
    private final MenuDao menuDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        usuarioDaoConfig = daoConfigMap.get(UsuarioDao.class).clone();
        usuarioDaoConfig.initIdentityScope(type);

        personaDaoConfig = daoConfigMap.get(PersonaDao.class).clone();
        personaDaoConfig.initIdentityScope(type);

        enfermedadDaoConfig = daoConfigMap.get(EnfermedadDao.class).clone();
        enfermedadDaoConfig.initIdentityScope(type);

        administradorDaoConfig = daoConfigMap.get(AdministradorDao.class).clone();
        administradorDaoConfig.initIdentityScope(type);

        categoriaDaoConfig = daoConfigMap.get(CategoriaDao.class).clone();
        categoriaDaoConfig.initIdentityScope(type);

        alimentoDaoConfig = daoConfigMap.get(AlimentoDao.class).clone();
        alimentoDaoConfig.initIdentityScope(type);

        listEnfermedadDaoConfig = daoConfigMap.get(ListEnfermedadDao.class).clone();
        listEnfermedadDaoConfig.initIdentityScope(type);

        alimenRestringDaoConfig = daoConfigMap.get(AlimenRestringDao.class).clone();
        alimenRestringDaoConfig.initIdentityScope(type);

        tempAlimentoDaoConfig = daoConfigMap.get(TempAlimentoDao.class).clone();
        tempAlimentoDaoConfig.initIdentityScope(type);

        tempEnfermedadDaoConfig = daoConfigMap.get(TempEnfermedadDao.class).clone();
        tempEnfermedadDaoConfig.initIdentityScope(type);

        tempPersonaDaoConfig = daoConfigMap.get(TempPersonaDao.class).clone();
        tempPersonaDaoConfig.initIdentityScope(type);

        familiarDaoConfig = daoConfigMap.get(FamiliarDao.class).clone();
        familiarDaoConfig.initIdentityScope(type);

        diarioDaoConfig = daoConfigMap.get(DiarioDao.class).clone();
        diarioDaoConfig.initIdentityScope(type);

        diarioListaDaoConfig = daoConfigMap.get(DiarioListaDao.class).clone();
        diarioListaDaoConfig.initIdentityScope(type);

        tempDiarioDaoConfig = daoConfigMap.get(TempDiarioDao.class).clone();
        tempDiarioDaoConfig.initIdentityScope(type);

        menuDaoConfig = daoConfigMap.get(MenuDao.class).clone();
        menuDaoConfig.initIdentityScope(type);

        usuarioDao = new UsuarioDao(usuarioDaoConfig, this);
        personaDao = new PersonaDao(personaDaoConfig, this);
        enfermedadDao = new EnfermedadDao(enfermedadDaoConfig, this);
        administradorDao = new AdministradorDao(administradorDaoConfig, this);
        categoriaDao = new CategoriaDao(categoriaDaoConfig, this);
        alimentoDao = new AlimentoDao(alimentoDaoConfig, this);
        listEnfermedadDao = new ListEnfermedadDao(listEnfermedadDaoConfig, this);
        alimenRestringDao = new AlimenRestringDao(alimenRestringDaoConfig, this);
        tempAlimentoDao = new TempAlimentoDao(tempAlimentoDaoConfig, this);
        tempEnfermedadDao = new TempEnfermedadDao(tempEnfermedadDaoConfig, this);
        tempPersonaDao = new TempPersonaDao(tempPersonaDaoConfig, this);
        familiarDao = new FamiliarDao(familiarDaoConfig, this);
        diarioDao = new DiarioDao(diarioDaoConfig, this);
        diarioListaDao = new DiarioListaDao(diarioListaDaoConfig, this);
        tempDiarioDao = new TempDiarioDao(tempDiarioDaoConfig, this);
        menuDao = new MenuDao(menuDaoConfig, this);

        registerDao(Usuario.class, usuarioDao);
        registerDao(Persona.class, personaDao);
        registerDao(Enfermedad.class, enfermedadDao);
        registerDao(Administrador.class, administradorDao);
        registerDao(Categoria.class, categoriaDao);
        registerDao(Alimento.class, alimentoDao);
        registerDao(ListEnfermedad.class, listEnfermedadDao);
        registerDao(AlimenRestring.class, alimenRestringDao);
        registerDao(TempAlimento.class, tempAlimentoDao);
        registerDao(TempEnfermedad.class, tempEnfermedadDao);
        registerDao(TempPersona.class, tempPersonaDao);
        registerDao(Familiar.class, familiarDao);
        registerDao(Diario.class, diarioDao);
        registerDao(DiarioLista.class, diarioListaDao);
        registerDao(TempDiario.class, tempDiarioDao);
        registerDao(Menu.class, menuDao);
    }
    
    public void clear() {
        usuarioDaoConfig.getIdentityScope().clear();
        personaDaoConfig.getIdentityScope().clear();
        enfermedadDaoConfig.getIdentityScope().clear();
        administradorDaoConfig.getIdentityScope().clear();
        categoriaDaoConfig.getIdentityScope().clear();
        alimentoDaoConfig.getIdentityScope().clear();
        listEnfermedadDaoConfig.getIdentityScope().clear();
        alimenRestringDaoConfig.getIdentityScope().clear();
        tempAlimentoDaoConfig.getIdentityScope().clear();
        tempEnfermedadDaoConfig.getIdentityScope().clear();
        tempPersonaDaoConfig.getIdentityScope().clear();
        familiarDaoConfig.getIdentityScope().clear();
        diarioDaoConfig.getIdentityScope().clear();
        diarioListaDaoConfig.getIdentityScope().clear();
        tempDiarioDaoConfig.getIdentityScope().clear();
        menuDaoConfig.getIdentityScope().clear();
    }

    public UsuarioDao getUsuarioDao() {
        return usuarioDao;
    }

    public PersonaDao getPersonaDao() {
        return personaDao;
    }

    public EnfermedadDao getEnfermedadDao() {
        return enfermedadDao;
    }

    public AdministradorDao getAdministradorDao() {
        return administradorDao;
    }

    public CategoriaDao getCategoriaDao() {
        return categoriaDao;
    }

    public AlimentoDao getAlimentoDao() {
        return alimentoDao;
    }

    public ListEnfermedadDao getListEnfermedadDao() {
        return listEnfermedadDao;
    }

    public AlimenRestringDao getAlimenRestringDao() {
        return alimenRestringDao;
    }

    public TempAlimentoDao getTempAlimentoDao() {
        return tempAlimentoDao;
    }

    public TempEnfermedadDao getTempEnfermedadDao() {
        return tempEnfermedadDao;
    }

    public TempPersonaDao getTempPersonaDao() {
        return tempPersonaDao;
    }

    public FamiliarDao getFamiliarDao() {
        return familiarDao;
    }

    public DiarioDao getDiarioDao() {
        return diarioDao;
    }

    public DiarioListaDao getDiarioListaDao() {
        return diarioListaDao;
    }

    public TempDiarioDao getTempDiarioDao() {
        return tempDiarioDao;
    }

    public MenuDao getMenuDao() {
        return menuDao;
    }

}
