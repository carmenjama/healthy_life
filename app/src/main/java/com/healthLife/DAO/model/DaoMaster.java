package com.healthLife.DAO.model;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import com.healthLife.DAO.model.UsuarioDao;
import com.healthLife.DAO.model.PersonaDao;
import com.healthLife.DAO.model.EnfermedadDao;
import com.healthLife.DAO.model.AdministradorDao;
import com.healthLife.DAO.model.CategoriaDao;
import com.healthLife.DAO.model.AlimentoDao;
import com.healthLife.DAO.model.ListEnfermedadDao;
import com.healthLife.DAO.model.AlimenRestringDao;
import com.healthLife.DAO.model.TempAlimentoDao;
import com.healthLife.DAO.model.TempEnfermedadDao;
import com.healthLife.DAO.model.TempPersonaDao;
import com.healthLife.DAO.model.FamiliarDao;
import com.healthLife.DAO.model.DiarioDao;
import com.healthLife.DAO.model.DiarioListaDao;
import com.healthLife.DAO.model.TempDiarioDao;
import com.healthLife.DAO.model.MenuDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 1): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 1;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        UsuarioDao.createTable(db, ifNotExists);
        PersonaDao.createTable(db, ifNotExists);
        EnfermedadDao.createTable(db, ifNotExists);
        AdministradorDao.createTable(db, ifNotExists);
        CategoriaDao.createTable(db, ifNotExists);
        AlimentoDao.createTable(db, ifNotExists);
        ListEnfermedadDao.createTable(db, ifNotExists);
        AlimenRestringDao.createTable(db, ifNotExists);
        TempAlimentoDao.createTable(db, ifNotExists);
        TempEnfermedadDao.createTable(db, ifNotExists);
        TempPersonaDao.createTable(db, ifNotExists);
        FamiliarDao.createTable(db, ifNotExists);
        DiarioDao.createTable(db, ifNotExists);
        DiarioListaDao.createTable(db, ifNotExists);
        TempDiarioDao.createTable(db, ifNotExists);
        MenuDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        UsuarioDao.dropTable(db, ifExists);
        PersonaDao.dropTable(db, ifExists);
        EnfermedadDao.dropTable(db, ifExists);
        AdministradorDao.dropTable(db, ifExists);
        CategoriaDao.dropTable(db, ifExists);
        AlimentoDao.dropTable(db, ifExists);
        ListEnfermedadDao.dropTable(db, ifExists);
        AlimenRestringDao.dropTable(db, ifExists);
        TempAlimentoDao.dropTable(db, ifExists);
        TempEnfermedadDao.dropTable(db, ifExists);
        TempPersonaDao.dropTable(db, ifExists);
        FamiliarDao.dropTable(db, ifExists);
        DiarioDao.dropTable(db, ifExists);
        DiarioListaDao.dropTable(db, ifExists);
        TempDiarioDao.dropTable(db, ifExists);
        MenuDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(UsuarioDao.class);
        registerDaoClass(PersonaDao.class);
        registerDaoClass(EnfermedadDao.class);
        registerDaoClass(AdministradorDao.class);
        registerDaoClass(CategoriaDao.class);
        registerDaoClass(AlimentoDao.class);
        registerDaoClass(ListEnfermedadDao.class);
        registerDaoClass(AlimenRestringDao.class);
        registerDaoClass(TempAlimentoDao.class);
        registerDaoClass(TempEnfermedadDao.class);
        registerDaoClass(TempPersonaDao.class);
        registerDaoClass(FamiliarDao.class);
        registerDaoClass(DiarioDao.class);
        registerDaoClass(DiarioListaDao.class);
        registerDaoClass(TempDiarioDao.class);
        registerDaoClass(MenuDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
